// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/user.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type GetUserOptions_RequestType int32

const (
	GetUserOptions_BY_USERNAME GetUserOptions_RequestType = 0
	GetUserOptions_BY_UID      GetUserOptions_RequestType = 1
	GetUserOptions_BY_CONTEXT  GetUserOptions_RequestType = 2
)

var GetUserOptions_RequestType_name = map[int32]string{
	0: "BY_USERNAME",
	1: "BY_UID",
	2: "BY_CONTEXT",
}
var GetUserOptions_RequestType_value = map[string]int32{
	"BY_USERNAME": 0,
	"BY_UID":      1,
	"BY_CONTEXT":  2,
}

func (x GetUserOptions_RequestType) String() string {
	return proto1.EnumName(GetUserOptions_RequestType_name, int32(x))
}
func (GetUserOptions_RequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor6, []int{2, 0}
}

type ListUsersOptions_RequestType int32

const (
	ListUsersOptions_BY_UPSTREAM ListUsersOptions_RequestType = 0
	ListUsersOptions_ALL         ListUsersOptions_RequestType = 1
)

var ListUsersOptions_RequestType_name = map[int32]string{
	0: "BY_UPSTREAM",
	1: "ALL",
}
var ListUsersOptions_RequestType_value = map[string]int32{
	"BY_UPSTREAM": 0,
	"ALL":         1,
}

func (x ListUsersOptions_RequestType) String() string {
	return proto1.EnumName(ListUsersOptions_RequestType_name, int32(x))
}
func (ListUsersOptions_RequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor6, []int{7, 0}
}

type User struct {
	Key             string   `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Uid             string   `protobuf:"bytes,2,opt,name=uid" json:"uid,omitempty"`
	Username        string   `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
	Email           string   `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	FullName        string   `protobuf:"bytes,5,opt,name=full_name,json=fullName" json:"full_name,omitempty"`
	Biography       string   `protobuf:"bytes,6,opt,name=biography" json:"biography,omitempty"`
	Upstream        string   `protobuf:"bytes,7,opt,name=upstream" json:"upstream,omitempty"`
	UpstreamBody    string   `protobuf:"bytes,8,opt,name=upstream_body,json=upstreamBody" json:"upstream_body,omitempty"`
	PictureUrl      string   `protobuf:"bytes,9,opt,name=picture_url,json=pictureUrl" json:"picture_url,omitempty"`
	ProviderId      string   `protobuf:"bytes,10,opt,name=provider_id,json=providerId" json:"provider_id,omitempty"`
	Name            string   `protobuf:"bytes,11,opt,name=name" json:"name,omitempty"`
	UpstreamId      string   `protobuf:"bytes,12,opt,name=upstream_id,json=upstreamId" json:"upstream_id,omitempty"`
	EmailPrivate    bool     `protobuf:"varint,13,opt,name=email_private,json=emailPrivate" json:"email_private,omitempty"`
	Roles           []string `protobuf:"bytes,14,rep,name=roles" json:"roles,omitempty"`
	DeletedAt       string   `protobuf:"bytes,15,opt,name=deleted_at,json=deletedAt" json:"deleted_at,omitempty"`
	Provider        string   `protobuf:"bytes,17,opt,name=provider" json:"provider,omitempty"`
	VoteCount       int32    `protobuf:"varint,18,opt,name=vote_count,json=voteCount" json:"vote_count,omitempty"`
	LawCount        int32    `protobuf:"varint,19,opt,name=law_count,json=lawCount" json:"law_count,omitempty"`
	HasPassword     bool     `protobuf:"varint,20,opt,name=has_password,json=hasPassword" json:"has_password,omitempty"`
	FullNamePrivate bool     `protobuf:"varint,21,opt,name=full_name_private,json=fullNamePrivate" json:"full_name_private,omitempty"`
	LastLogin       string   `protobuf:"bytes,22,opt,name=last_login,json=lastLogin" json:"last_login,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto1.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *User) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *User) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *User) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *User) GetBiography() string {
	if m != nil {
		return m.Biography
	}
	return ""
}

func (m *User) GetUpstream() string {
	if m != nil {
		return m.Upstream
	}
	return ""
}

func (m *User) GetUpstreamBody() string {
	if m != nil {
		return m.UpstreamBody
	}
	return ""
}

func (m *User) GetPictureUrl() string {
	if m != nil {
		return m.PictureUrl
	}
	return ""
}

func (m *User) GetProviderId() string {
	if m != nil {
		return m.ProviderId
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetUpstreamId() string {
	if m != nil {
		return m.UpstreamId
	}
	return ""
}

func (m *User) GetEmailPrivate() bool {
	if m != nil {
		return m.EmailPrivate
	}
	return false
}

func (m *User) GetRoles() []string {
	if m != nil {
		return m.Roles
	}
	return nil
}

func (m *User) GetDeletedAt() string {
	if m != nil {
		return m.DeletedAt
	}
	return ""
}

func (m *User) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *User) GetVoteCount() int32 {
	if m != nil {
		return m.VoteCount
	}
	return 0
}

func (m *User) GetLawCount() int32 {
	if m != nil {
		return m.LawCount
	}
	return 0
}

func (m *User) GetHasPassword() bool {
	if m != nil {
		return m.HasPassword
	}
	return false
}

func (m *User) GetFullNamePrivate() bool {
	if m != nil {
		return m.FullNamePrivate
	}
	return false
}

func (m *User) GetLastLogin() string {
	if m != nil {
		return m.LastLogin
	}
	return ""
}

type UserMetadata struct {
	OfficeEmail string `protobuf:"bytes,1,opt,name=office_email,json=officeEmail" json:"office_email,omitempty"`
	OfficePhone string `protobuf:"bytes,2,opt,name=office_phone,json=officePhone" json:"office_phone,omitempty"`
	OfficeAddr  string `protobuf:"bytes,3,opt,name=office_addr,json=officeAddr" json:"office_addr,omitempty"`
	State       string `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
	WebsiteUrl  string `protobuf:"bytes,5,opt,name=website_url,json=websiteUrl" json:"website_url,omitempty"`
	Rank        string `protobuf:"bytes,6,opt,name=rank" json:"rank,omitempty"`
	Influence   int32  `protobuf:"varint,7,opt,name=influence" json:"influence,omitempty"`
}

func (m *UserMetadata) Reset()                    { *m = UserMetadata{} }
func (m *UserMetadata) String() string            { return proto1.CompactTextString(m) }
func (*UserMetadata) ProtoMessage()               {}
func (*UserMetadata) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *UserMetadata) GetOfficeEmail() string {
	if m != nil {
		return m.OfficeEmail
	}
	return ""
}

func (m *UserMetadata) GetOfficePhone() string {
	if m != nil {
		return m.OfficePhone
	}
	return ""
}

func (m *UserMetadata) GetOfficeAddr() string {
	if m != nil {
		return m.OfficeAddr
	}
	return ""
}

func (m *UserMetadata) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *UserMetadata) GetWebsiteUrl() string {
	if m != nil {
		return m.WebsiteUrl
	}
	return ""
}

func (m *UserMetadata) GetRank() string {
	if m != nil {
		return m.Rank
	}
	return ""
}

func (m *UserMetadata) GetInfluence() int32 {
	if m != nil {
		return m.Influence
	}
	return 0
}

type GetUserOptions struct {
	ReqType  GetUserOptions_RequestType `protobuf:"varint,1,opt,name=req_type,json=reqType,enum=proto.GetUserOptions_RequestType" json:"req_type,omitempty"`
	Username string                     `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
	Uid      string                     `protobuf:"bytes,3,opt,name=uid" json:"uid,omitempty"`
	Email    string                     `protobuf:"bytes,4,opt,name=email" json:"email,omitempty"`
	Quiet    bool                       `protobuf:"varint,5,opt,name=quiet" json:"quiet,omitempty"`
}

func (m *GetUserOptions) Reset()                    { *m = GetUserOptions{} }
func (m *GetUserOptions) String() string            { return proto1.CompactTextString(m) }
func (*GetUserOptions) ProtoMessage()               {}
func (*GetUserOptions) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *GetUserOptions) GetReqType() GetUserOptions_RequestType {
	if m != nil {
		return m.ReqType
	}
	return GetUserOptions_BY_USERNAME
}

func (m *GetUserOptions) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetUserOptions) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *GetUserOptions) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *GetUserOptions) GetQuiet() bool {
	if m != nil {
		return m.Quiet
	}
	return false
}

type GetUserRequest struct {
	Opts *GetUserOptions `protobuf:"bytes,1,opt,name=opts" json:"opts,omitempty"`
}

func (m *GetUserRequest) Reset()                    { *m = GetUserRequest{} }
func (m *GetUserRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetUserRequest) ProtoMessage()               {}
func (*GetUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *GetUserRequest) GetOpts() *GetUserOptions {
	if m != nil {
		return m.Opts
	}
	return nil
}

type GetUserReply struct {
	User  *User  `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Owner bool   `protobuf:"varint,3,opt,name=owner" json:"owner,omitempty"`
	Admin bool   `protobuf:"varint,4,opt,name=admin" json:"admin,omitempty"`
	Err   string `protobuf:"bytes,5,opt,name=err" json:"err,omitempty"`
}

func (m *GetUserReply) Reset()                    { *m = GetUserReply{} }
func (m *GetUserReply) String() string            { return proto1.CompactTextString(m) }
func (*GetUserReply) ProtoMessage()               {}
func (*GetUserReply) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *GetUserReply) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *GetUserReply) GetOwner() bool {
	if m != nil {
		return m.Owner
	}
	return false
}

func (m *GetUserReply) GetAdmin() bool {
	if m != nil {
		return m.Admin
	}
	return false
}

func (m *GetUserReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type CreateUserRequest struct {
	User *User `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
}

func (m *CreateUserRequest) Reset()                    { *m = CreateUserRequest{} }
func (m *CreateUserRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateUserRequest) ProtoMessage()               {}
func (*CreateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *CreateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type CreateUserReply struct {
	User *User  `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Err  string `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
}

func (m *CreateUserReply) Reset()                    { *m = CreateUserReply{} }
func (m *CreateUserReply) String() string            { return proto1.CompactTextString(m) }
func (*CreateUserReply) ProtoMessage()               {}
func (*CreateUserReply) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

func (m *CreateUserReply) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *CreateUserReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type ListUsersOptions struct {
	// string type = 1;
	Upstream string                       `protobuf:"bytes,2,opt,name=upstream" json:"upstream,omitempty"`
	All      bool                         `protobuf:"varint,3,opt,name=all" json:"all,omitempty"`
	Limit    int32                        `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
	PageSize int32                        `protobuf:"varint,5,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageNum  int32                        `protobuf:"varint,6,opt,name=page_num,json=pageNum" json:"page_num,omitempty"`
	Search   string                       `protobuf:"bytes,7,opt,name=search" json:"search,omitempty"`
	ReqType  ListUsersOptions_RequestType `protobuf:"varint,8,opt,name=req_type,json=reqType,enum=proto.ListUsersOptions_RequestType" json:"req_type,omitempty"`
}

func (m *ListUsersOptions) Reset()                    { *m = ListUsersOptions{} }
func (m *ListUsersOptions) String() string            { return proto1.CompactTextString(m) }
func (*ListUsersOptions) ProtoMessage()               {}
func (*ListUsersOptions) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

func (m *ListUsersOptions) GetUpstream() string {
	if m != nil {
		return m.Upstream
	}
	return ""
}

func (m *ListUsersOptions) GetAll() bool {
	if m != nil {
		return m.All
	}
	return false
}

func (m *ListUsersOptions) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ListUsersOptions) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListUsersOptions) GetPageNum() int32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

func (m *ListUsersOptions) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

func (m *ListUsersOptions) GetReqType() ListUsersOptions_RequestType {
	if m != nil {
		return m.ReqType
	}
	return ListUsersOptions_BY_UPSTREAM
}

type ListUsersRequest struct {
	Opts *ListUsersOptions `protobuf:"bytes,1,opt,name=opts" json:"opts,omitempty"`
}

func (m *ListUsersRequest) Reset()                    { *m = ListUsersRequest{} }
func (m *ListUsersRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListUsersRequest) ProtoMessage()               {}
func (*ListUsersRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{8} }

func (m *ListUsersRequest) GetOpts() *ListUsersOptions {
	if m != nil {
		return m.Opts
	}
	return nil
}

type ListUsersReply struct {
	Users []*User `protobuf:"bytes,1,rep,name=users" json:"users,omitempty"`
	Err   string  `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
}

func (m *ListUsersReply) Reset()                    { *m = ListUsersReply{} }
func (m *ListUsersReply) String() string            { return proto1.CompactTextString(m) }
func (*ListUsersReply) ProtoMessage()               {}
func (*ListUsersReply) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

func (m *ListUsersReply) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *ListUsersReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type RegisterUserRequest struct {
	Uid      string `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username" json:"username,omitempty"`
}

func (m *RegisterUserRequest) Reset()                    { *m = RegisterUserRequest{} }
func (m *RegisterUserRequest) String() string            { return proto1.CompactTextString(m) }
func (*RegisterUserRequest) ProtoMessage()               {}
func (*RegisterUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{10} }

func (m *RegisterUserRequest) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *RegisterUserRequest) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type RegisterUserReply struct {
	Err string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
}

func (m *RegisterUserReply) Reset()                    { *m = RegisterUserReply{} }
func (m *RegisterUserReply) String() string            { return proto1.CompactTextString(m) }
func (*RegisterUserReply) ProtoMessage()               {}
func (*RegisterUserReply) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{11} }

func (m *RegisterUserReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type UpdateUserOptions struct {
	// }
	Username        string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Email           string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	EmailPrivate    bool   `protobuf:"varint,3,opt,name=email_private,json=emailPrivate" json:"email_private,omitempty"`
	Biography       string `protobuf:"bytes,4,opt,name=biography" json:"biography,omitempty"`
	FullName        string `protobuf:"bytes,6,opt,name=full_name,json=fullName" json:"full_name,omitempty"`
	PictureUrl      string `protobuf:"bytes,7,opt,name=picture_url,json=pictureUrl" json:"picture_url,omitempty"`
	Password        string `protobuf:"bytes,8,opt,name=password" json:"password,omitempty"`
	FullNamePrivate bool   `protobuf:"varint,9,opt,name=full_name_private,json=fullNamePrivate" json:"full_name_private,omitempty"`
}

func (m *UpdateUserOptions) Reset()                    { *m = UpdateUserOptions{} }
func (m *UpdateUserOptions) String() string            { return proto1.CompactTextString(m) }
func (*UpdateUserOptions) ProtoMessage()               {}
func (*UpdateUserOptions) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{12} }

func (m *UpdateUserOptions) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UpdateUserOptions) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UpdateUserOptions) GetEmailPrivate() bool {
	if m != nil {
		return m.EmailPrivate
	}
	return false
}

func (m *UpdateUserOptions) GetBiography() string {
	if m != nil {
		return m.Biography
	}
	return ""
}

func (m *UpdateUserOptions) GetFullName() string {
	if m != nil {
		return m.FullName
	}
	return ""
}

func (m *UpdateUserOptions) GetPictureUrl() string {
	if m != nil {
		return m.PictureUrl
	}
	return ""
}

func (m *UpdateUserOptions) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *UpdateUserOptions) GetFullNamePrivate() bool {
	if m != nil {
		return m.FullNamePrivate
	}
	return false
}

type UpdateUserRequest struct {
	User *User              `protobuf:"bytes,1,opt,name=user" json:"user,omitempty"`
	Opts *UpdateUserOptions `protobuf:"bytes,2,opt,name=opts" json:"opts,omitempty"`
}

func (m *UpdateUserRequest) Reset()                    { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()               {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{13} }

func (m *UpdateUserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UpdateUserRequest) GetOpts() *UpdateUserOptions {
	if m != nil {
		return m.Opts
	}
	return nil
}

type UpdateUserReply struct {
	Err string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
}

func (m *UpdateUserReply) Reset()                    { *m = UpdateUserReply{} }
func (m *UpdateUserReply) String() string            { return proto1.CompactTextString(m) }
func (*UpdateUserReply) ProtoMessage()               {}
func (*UpdateUserReply) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{14} }

func (m *UpdateUserReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type UploadAvatarOptions struct {
	Image    []byte `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Filename string `protobuf:"bytes,2,opt,name=filename" json:"filename,omitempty"`
	Username string `protobuf:"bytes,3,opt,name=username" json:"username,omitempty"`
}

func (m *UploadAvatarOptions) Reset()                    { *m = UploadAvatarOptions{} }
func (m *UploadAvatarOptions) String() string            { return proto1.CompactTextString(m) }
func (*UploadAvatarOptions) ProtoMessage()               {}
func (*UploadAvatarOptions) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{15} }

func (m *UploadAvatarOptions) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *UploadAvatarOptions) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *UploadAvatarOptions) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func init() {
	proto1.RegisterType((*User)(nil), "proto.User")
	proto1.RegisterType((*UserMetadata)(nil), "proto.UserMetadata")
	proto1.RegisterType((*GetUserOptions)(nil), "proto.GetUserOptions")
	proto1.RegisterType((*GetUserRequest)(nil), "proto.GetUserRequest")
	proto1.RegisterType((*GetUserReply)(nil), "proto.GetUserReply")
	proto1.RegisterType((*CreateUserRequest)(nil), "proto.CreateUserRequest")
	proto1.RegisterType((*CreateUserReply)(nil), "proto.CreateUserReply")
	proto1.RegisterType((*ListUsersOptions)(nil), "proto.ListUsersOptions")
	proto1.RegisterType((*ListUsersRequest)(nil), "proto.ListUsersRequest")
	proto1.RegisterType((*ListUsersReply)(nil), "proto.ListUsersReply")
	proto1.RegisterType((*RegisterUserRequest)(nil), "proto.RegisterUserRequest")
	proto1.RegisterType((*RegisterUserReply)(nil), "proto.RegisterUserReply")
	proto1.RegisterType((*UpdateUserOptions)(nil), "proto.UpdateUserOptions")
	proto1.RegisterType((*UpdateUserRequest)(nil), "proto.UpdateUserRequest")
	proto1.RegisterType((*UpdateUserReply)(nil), "proto.UpdateUserReply")
	proto1.RegisterType((*UploadAvatarOptions)(nil), "proto.UploadAvatarOptions")
	proto1.RegisterEnum("proto.GetUserOptions_RequestType", GetUserOptions_RequestType_name, GetUserOptions_RequestType_value)
	proto1.RegisterEnum("proto.ListUsersOptions_RequestType", ListUsersOptions_RequestType_name, ListUsersOptions_RequestType_value)
}

func init() { proto1.RegisterFile("proto/user.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 1026 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0x5b, 0x6f, 0xdb, 0x36,
	0x14, 0xae, 0x6c, 0x2b, 0x91, 0x8f, 0xdd, 0xc4, 0x61, 0xd2, 0x4e, 0xbb, 0x14, 0x4b, 0x14, 0x0c,
	0xcb, 0x2e, 0xc8, 0x80, 0x6e, 0x4f, 0xdb, 0xb0, 0xc1, 0x49, 0x8d, 0x21, 0x40, 0x92, 0x06, 0x4a,
	0x0c, 0xac, 0x4f, 0x02, 0x6d, 0xd2, 0x36, 0x51, 0x59, 0x52, 0x28, 0x2a, 0x86, 0xfb, 0x23, 0xb6,
	0x7f, 0xb8, 0xa7, 0xbd, 0xef, 0x2f, 0x0c, 0x87, 0xa4, 0x6c, 0xd9, 0x75, 0x2f, 0x4f, 0xe6, 0xf9,
	0x78, 0x0e, 0xcf, 0xed, 0x3b, 0x3a, 0x86, 0x4e, 0x26, 0x53, 0x95, 0xfe, 0x50, 0xe4, 0x5c, 0x9e,
	0xea, 0x23, 0x71, 0xf5, 0x4f, 0xf0, 0x5f, 0x03, 0x1a, 0xfd, 0x9c, 0x4b, 0xd2, 0x81, 0xfa, 0x6b,
	0x3e, 0xf7, 0x9d, 0x43, 0xe7, 0xa4, 0x19, 0xe2, 0x11, 0x91, 0x42, 0x30, 0xbf, 0x66, 0x90, 0x42,
	0x30, 0xf2, 0x19, 0x78, 0xf8, 0x42, 0x42, 0xa7, 0xdc, 0xaf, 0x6b, 0x78, 0x21, 0x93, 0x03, 0x70,
	0xf9, 0x94, 0x8a, 0xd8, 0x6f, 0xe8, 0x0b, 0x23, 0x90, 0xcf, 0xa1, 0x39, 0x2a, 0xe2, 0x38, 0xd2,
	0x26, 0xae, 0x31, 0x41, 0xe0, 0x1a, 0x4d, 0xbe, 0x80, 0xe6, 0x40, 0xa4, 0x63, 0x49, 0xb3, 0xc9,
	0xdc, 0xdf, 0xd2, 0x97, 0x4b, 0x40, 0x3b, 0xcb, 0x72, 0x25, 0x39, 0x9d, 0xfa, 0xdb, 0xd6, 0x99,
	0x95, 0xc9, 0x31, 0x3c, 0x2e, 0xcf, 0xd1, 0x20, 0x65, 0x73, 0xdf, 0xd3, 0x0a, 0xed, 0x12, 0x3c,
	0x4b, 0xd9, 0x9c, 0x7c, 0x09, 0xad, 0x4c, 0x0c, 0x55, 0x21, 0x79, 0x54, 0xc8, 0xd8, 0x6f, 0x6a,
	0x15, 0xb0, 0x50, 0x5f, 0xc6, 0x5a, 0x41, 0xa6, 0x0f, 0x82, 0x71, 0x19, 0x09, 0xe6, 0x83, 0x55,
	0xb0, 0xd0, 0x05, 0x23, 0x04, 0x1a, 0x3a, 0xf0, 0x96, 0xbe, 0xd1, 0x67, 0x34, 0x5a, 0xb8, 0x16,
	0xcc, 0x6f, 0x1b, 0xa3, 0x12, 0xba, 0x60, 0x18, 0x9b, 0xce, 0x3d, 0xca, 0xa4, 0x78, 0xa0, 0x8a,
	0xfb, 0x8f, 0x0f, 0x9d, 0x13, 0x2f, 0x6c, 0x6b, 0xf0, 0xc6, 0x60, 0x58, 0x2d, 0x99, 0xc6, 0x3c,
	0xf7, 0x77, 0x0e, 0xeb, 0x58, 0x2d, 0x2d, 0x90, 0x67, 0x00, 0x8c, 0xc7, 0x5c, 0x71, 0x16, 0x51,
	0xe5, 0xef, 0x9a, 0x8a, 0x58, 0xa4, 0xab, 0xb0, 0x22, 0x65, 0x70, 0xfe, 0x9e, 0xa9, 0x48, 0x29,
	0xa3, 0xe9, 0x43, 0xaa, 0x78, 0x34, 0x4c, 0x8b, 0x44, 0xf9, 0xe4, 0xd0, 0x39, 0x71, 0xc3, 0x26,
	0x22, 0xe7, 0x08, 0x60, 0x1f, 0x62, 0x3a, 0xb3, 0xb7, 0xfb, 0xfa, 0xd6, 0x8b, 0xe9, 0xcc, 0x5c,
	0x1e, 0x41, 0x7b, 0x42, 0xf3, 0x28, 0xa3, 0x79, 0x3e, 0x4b, 0x25, 0xf3, 0x0f, 0x74, 0xc0, 0xad,
	0x09, 0xcd, 0x6f, 0x2c, 0x44, 0xbe, 0x85, 0xbd, 0x45, 0x1f, 0x17, 0x89, 0x3d, 0xd1, 0x7a, 0xbb,
	0x65, 0x3f, 0xcb, 0xdc, 0x9e, 0x01, 0xc4, 0x34, 0x57, 0x51, 0x9c, 0x8e, 0x45, 0xe2, 0x3f, 0x35,
	0x59, 0x20, 0x72, 0x89, 0x40, 0xf0, 0x8f, 0x03, 0x6d, 0x64, 0xdc, 0x15, 0x57, 0x94, 0x51, 0x45,
	0xd1, 0x7d, 0x3a, 0x1a, 0x89, 0x21, 0x8f, 0x0c, 0x81, 0x0c, 0x05, 0x5b, 0x06, 0xeb, 0x69, 0x1a,
	0x2d, 0x55, 0xb2, 0x49, 0x9a, 0x70, 0xcb, 0x49, 0xab, 0x72, 0x83, 0x10, 0xf6, 0xc5, 0xaa, 0x50,
	0xc6, 0xa4, 0xa5, 0x27, 0x18, 0xa8, 0xcb, 0x98, 0xc4, 0x92, 0xe7, 0x0a, 0xc3, 0xb6, 0x04, 0xd5,
	0x02, 0x9a, 0xcd, 0xf8, 0x20, 0x17, 0xca, 0x90, 0xc4, 0x50, 0x14, 0x2c, 0x84, 0x24, 0x21, 0xd0,
	0x90, 0x34, 0x79, 0x6d, 0xf9, 0xa9, 0xcf, 0x48, 0x5c, 0x91, 0x8c, 0xe2, 0x82, 0x27, 0x43, 0xae,
	0xb9, 0xe9, 0x86, 0x4b, 0x20, 0xf8, 0xd7, 0x81, 0x9d, 0x3f, 0xb8, 0xc2, 0x1c, 0x5f, 0x66, 0x4a,
	0xa4, 0x49, 0x4e, 0x7e, 0x05, 0x4f, 0xf2, 0xfb, 0x48, 0xcd, 0x33, 0xae, 0xd3, 0xdb, 0x79, 0x7e,
	0x64, 0xc6, 0xf0, 0x74, 0x55, 0xf1, 0x34, 0xe4, 0xf7, 0x05, 0xcf, 0xd5, 0xdd, 0x3c, 0xe3, 0xe1,
	0xb6, 0xe4, 0xf7, 0x78, 0x58, 0x19, 0xbb, 0xda, 0xda, 0xd8, 0xd9, 0x21, 0xad, 0x2f, 0x87, 0x74,
	0xf3, 0x20, 0x1e, 0x80, 0x7b, 0x5f, 0x08, 0xae, 0x74, 0x86, 0x5e, 0x68, 0x84, 0xe0, 0x67, 0x68,
	0x55, 0x3c, 0x92, 0x5d, 0x68, 0x9d, 0xbd, 0x8a, 0xfa, 0xb7, 0xbd, 0xf0, 0xba, 0x7b, 0xd5, 0xeb,
	0x3c, 0x22, 0x00, 0x5b, 0x08, 0x5c, 0xbc, 0xe8, 0x38, 0x64, 0x07, 0xe0, 0xec, 0x55, 0x74, 0xfe,
	0xf2, 0xfa, 0xae, 0xf7, 0xe7, 0x5d, 0xa7, 0x16, 0xfc, 0xb2, 0xc8, 0xd2, 0x3e, 0x41, 0xbe, 0x81,
	0x46, 0x9a, 0xa9, 0x5c, 0x67, 0xd8, 0x7a, 0xfe, 0x64, 0x63, 0x86, 0xa1, 0x56, 0x09, 0xa6, 0xd0,
	0x5e, 0x18, 0x67, 0x31, 0xce, 0x6a, 0x03, 0x53, 0xb2, 0xa6, 0x2d, 0x6b, 0xaa, 0xef, 0xf5, 0x05,
	0xc6, 0x9f, 0xce, 0x12, 0x6e, 0x1a, 0xeb, 0x85, 0x46, 0x40, 0x94, 0xb2, 0xa9, 0x48, 0x74, 0xae,
	0x5e, 0x68, 0x04, 0xac, 0x09, 0x97, 0xd2, 0xf6, 0x12, 0x8f, 0xc1, 0x4f, 0xb0, 0x77, 0x2e, 0x39,
	0x55, 0xbc, 0x1a, 0xee, 0x87, 0x7c, 0x06, 0x2f, 0x60, 0xb7, 0x6a, 0xf5, 0x51, 0x71, 0x5a, 0xdf,
	0xb5, 0xa5, 0xef, 0xbf, 0x6b, 0xd0, 0xb9, 0x14, 0xb9, 0x4e, 0x36, 0x2f, 0x09, 0x51, 0xfd, 0xb8,
	0xd5, 0xd6, 0x3e, 0x6e, 0x1d, 0xa8, 0xd3, 0x38, 0xb6, 0x89, 0xe2, 0x11, 0xd3, 0x8c, 0xc5, 0x54,
	0x28, 0x9d, 0xa6, 0x1b, 0x1a, 0x01, 0x67, 0x3a, 0xa3, 0x63, 0x1e, 0xe5, 0xe2, 0x8d, 0xf9, 0xb6,
	0xba, 0xa1, 0x87, 0xc0, 0xad, 0x78, 0xc3, 0xc9, 0xa7, 0xa0, 0xcf, 0x51, 0x52, 0x4c, 0x35, 0x75,
	0xdd, 0x70, 0x1b, 0xe5, 0xeb, 0x62, 0x4a, 0x9e, 0xc2, 0x56, 0xce, 0xa9, 0x1c, 0x4e, 0xec, 0x67,
	0xd5, 0x4a, 0xe4, 0xb7, 0x0a, 0x49, 0x3d, 0x4d, 0xd2, 0x63, 0x9b, 0xdf, 0x7a, 0xf8, 0x1b, 0x69,
	0x1a, 0x7c, 0xbd, 0x91, 0x4c, 0x37, 0xb7, 0x77, 0x61, 0xaf, 0x7b, 0xd5, 0x79, 0x44, 0xb6, 0xa1,
	0xde, 0xbd, 0xbc, 0xec, 0x38, 0xc1, 0xef, 0x95, 0x82, 0x94, 0xcd, 0xf8, 0x6e, 0x85, 0x3b, 0x9f,
	0xbc, 0xc3, 0xb1, 0x65, 0x4f, 0x0f, 0x76, 0x2a, 0x0f, 0x60, 0x5f, 0x8e, 0xc0, 0xc5, 0xf2, 0xa3,
	0x7d, 0x7d, 0xbd, 0x31, 0xe6, 0x66, 0x43, 0x67, 0xce, 0x61, 0x3f, 0xe4, 0x63, 0x91, 0x2b, 0x2e,
	0xab, 0xbc, 0xb0, 0x23, 0xe5, 0x6c, 0xde, 0x7b, 0x6b, 0x03, 0x18, 0x7c, 0x05, 0x7b, 0xab, 0x8f,
	0x60, 0x38, 0xd6, 0x97, 0xb3, 0xf4, 0xf5, 0x57, 0x0d, 0xf6, 0xfa, 0x19, 0xb3, 0x64, 0xaa, 0xd2,
	0xa0, 0x7c, 0xd8, 0x79, 0xd7, 0x42, 0xad, 0x55, 0xe7, 0xf8, 0xad, 0xed, 0x52, 0xdf, 0xb0, 0x5d,
	0x56, 0x16, 0x6b, 0x63, 0x7d, 0xb1, 0xae, 0xec, 0xe4, 0xad, 0xb5, 0x9d, 0xbc, 0xb6, 0x34, 0xb7,
	0xdf, 0x5a, 0x9a, 0xb8, 0x84, 0xca, 0x45, 0xe1, 0xd9, 0x25, 0xf4, 0xde, 0x2d, 0xd1, 0xdc, 0xb8,
	0x25, 0x82, 0x41, 0xb5, 0x1e, 0x1f, 0x3b, 0x92, 0xe4, 0x7b, 0x4b, 0x93, 0x9a, 0x56, 0xf0, 0x4b,
	0x85, 0xf5, 0xc2, 0x5a, 0x9e, 0x1c, 0xc3, 0x6e, 0xd5, 0xc7, 0xe6, 0xce, 0x0c, 0x61, 0xbf, 0x9f,
	0xc5, 0x29, 0x65, 0xdd, 0x07, 0xaa, 0xe8, 0xa2, 0x35, 0x07, 0xe0, 0x8a, 0x29, 0x1d, 0x9b, 0xbe,
	0xb4, 0x43, 0x23, 0x60, 0xf6, 0x23, 0x11, 0xf3, 0x2a, 0x13, 0x4a, 0xf9, 0x7d, 0xff, 0x8e, 0x06,
	0x5b, 0x3a, 0xd0, 0x1f, 0xff, 0x0f, 0x00, 0x00, 0xff, 0xff, 0xae, 0xb4, 0xa1, 0xcc, 0x88, 0x09,
	0x00, 0x00,
}
