// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/ballot.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type VoteValue int32

const (
	VoteValue_YES         VoteValue = 0
	VoteValue_NO          VoteValue = 1
	VoteValue_PRESENT     VoteValue = 2
	VoteValue_NOT_PRESENT VoteValue = 3
)

var VoteValue_name = map[int32]string{
	0: "YES",
	1: "NO",
	2: "PRESENT",
	3: "NOT_PRESENT",
}
var VoteValue_value = map[string]int32{
	"YES":         0,
	"NO":          1,
	"PRESENT":     2,
	"NOT_PRESENT": 3,
}

func (x VoteValue) String() string {
	return proto1.EnumName(VoteValue_name, int32(x))
}
func (VoteValue) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type GetVoteOptions_RequestType int32

const (
	GetVoteOptions_BY_USER_VERSION GetVoteOptions_RequestType = 0
)

var GetVoteOptions_RequestType_name = map[int32]string{
	0: "BY_USER_VERSION",
}
var GetVoteOptions_RequestType_value = map[string]int32{
	"BY_USER_VERSION": 0,
}

func (x GetVoteOptions_RequestType) String() string {
	return proto1.EnumName(GetVoteOptions_RequestType_name, int32(x))
}
func (GetVoteOptions_RequestType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor2, []int{10, 0}
}

type Vote struct {
	Uid        string                     `protobuf:"bytes,1,opt,name=uid" json:"uid,omitempty"`
	LawId      string                     `protobuf:"bytes,2,opt,name=law_id,json=lawId" json:"law_id,omitempty"`
	UserId     string                     `protobuf:"bytes,3,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Vote       string                     `protobuf:"bytes,4,opt,name=vote" json:"vote,omitempty"`
	Comment    string                     `protobuf:"bytes,5,opt,name=comment" json:"comment,omitempty"`
	Username   string                     `protobuf:"bytes,6,opt,name=username" json:"username,omitempty"`
	Upstream   string                     `protobuf:"bytes,7,opt,name=upstream" json:"upstream,omitempty"`
	Ident      string                     `protobuf:"bytes,8,opt,name=ident" json:"ident,omitempty"`
	Branch     string                     `protobuf:"bytes,9,opt,name=branch" json:"branch,omitempty"`
	Label      string                     `protobuf:"bytes,10,opt,name=label" json:"label,omitempty"`
	CastAt     *google_protobuf.Timestamp `protobuf:"bytes,11,opt,name=cast_at,json=castAt" json:"cast_at,omitempty"`
	Version    uint32                     `protobuf:"varint,12,opt,name=version" json:"version,omitempty"`
	VersionId  string                     `protobuf:"bytes,13,opt,name=version_id,json=versionId" json:"version_id,omitempty"`
	PictureUrl string                     `protobuf:"bytes,14,opt,name=picture_url,json=pictureUrl" json:"picture_url,omitempty"`
	LawTitle   string                     `protobuf:"bytes,15,opt,name=law_title,json=lawTitle" json:"law_title,omitempty"`
	Law        *LawSet                    `protobuf:"bytes,16,opt,name=law" json:"law,omitempty"`
	User       *User                      `protobuf:"bytes,17,opt,name=user" json:"user,omitempty"`
}

func (m *Vote) Reset()                    { *m = Vote{} }
func (m *Vote) String() string            { return proto1.CompactTextString(m) }
func (*Vote) ProtoMessage()               {}
func (*Vote) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Vote) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *Vote) GetLawId() string {
	if m != nil {
		return m.LawId
	}
	return ""
}

func (m *Vote) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Vote) GetVote() string {
	if m != nil {
		return m.Vote
	}
	return ""
}

func (m *Vote) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *Vote) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Vote) GetUpstream() string {
	if m != nil {
		return m.Upstream
	}
	return ""
}

func (m *Vote) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *Vote) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *Vote) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *Vote) GetCastAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.CastAt
	}
	return nil
}

func (m *Vote) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Vote) GetVersionId() string {
	if m != nil {
		return m.VersionId
	}
	return ""
}

func (m *Vote) GetPictureUrl() string {
	if m != nil {
		return m.PictureUrl
	}
	return ""
}

func (m *Vote) GetLawTitle() string {
	if m != nil {
		return m.LawTitle
	}
	return ""
}

func (m *Vote) GetLaw() *LawSet {
	if m != nil {
		return m.Law
	}
	return nil
}

func (m *Vote) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type VoteSummary struct {
	Yays               int32 `protobuf:"varint,1,opt,name=yays" json:"yays,omitempty"`
	Nays               int32 `protobuf:"varint,2,opt,name=nays" json:"nays,omitempty"`
	Present            int32 `protobuf:"varint,3,opt,name=present" json:"present,omitempty"`
	NotPresent         int32 `protobuf:"varint,4,opt,name=not_present,json=notPresent" json:"not_present,omitempty"`
	UpstreamYays       int32 `protobuf:"varint,5,opt,name=upstream_yays,json=upstreamYays" json:"upstream_yays,omitempty"`
	UpstreamNays       int32 `protobuf:"varint,6,opt,name=upstream_nays,json=upstreamNays" json:"upstream_nays,omitempty"`
	UpstreamPresent    int32 `protobuf:"varint,7,opt,name=upstream_present,json=upstreamPresent" json:"upstream_present,omitempty"`
	UpstreamNotPresent int32 `protobuf:"varint,8,opt,name=upstream_not_present,json=upstreamNotPresent" json:"upstream_not_present,omitempty"`
}

func (m *VoteSummary) Reset()                    { *m = VoteSummary{} }
func (m *VoteSummary) String() string            { return proto1.CompactTextString(m) }
func (*VoteSummary) ProtoMessage()               {}
func (*VoteSummary) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *VoteSummary) GetYays() int32 {
	if m != nil {
		return m.Yays
	}
	return 0
}

func (m *VoteSummary) GetNays() int32 {
	if m != nil {
		return m.Nays
	}
	return 0
}

func (m *VoteSummary) GetPresent() int32 {
	if m != nil {
		return m.Present
	}
	return 0
}

func (m *VoteSummary) GetNotPresent() int32 {
	if m != nil {
		return m.NotPresent
	}
	return 0
}

func (m *VoteSummary) GetUpstreamYays() int32 {
	if m != nil {
		return m.UpstreamYays
	}
	return 0
}

func (m *VoteSummary) GetUpstreamNays() int32 {
	if m != nil {
		return m.UpstreamNays
	}
	return 0
}

func (m *VoteSummary) GetUpstreamPresent() int32 {
	if m != nil {
		return m.UpstreamPresent
	}
	return 0
}

func (m *VoteSummary) GetUpstreamNotPresent() int32 {
	if m != nil {
		return m.UpstreamNotPresent
	}
	return 0
}

type CreateVotesOptions struct {
	VoteResult *VoteResult `protobuf:"bytes,1,opt,name=vote_result,json=voteResult" json:"vote_result,omitempty"`
}

func (m *CreateVotesOptions) Reset()                    { *m = CreateVotesOptions{} }
func (m *CreateVotesOptions) String() string            { return proto1.CompactTextString(m) }
func (*CreateVotesOptions) ProtoMessage()               {}
func (*CreateVotesOptions) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *CreateVotesOptions) GetVoteResult() *VoteResult {
	if m != nil {
		return m.VoteResult
	}
	return nil
}

type VoteResult struct {
	UpstreamGroup string                     `protobuf:"bytes,1,opt,name=upstream_group,json=upstreamGroup" json:"upstream_group,omitempty"`
	Result        string                     `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
	PublishedAt   *google_protobuf.Timestamp `protobuf:"bytes,3,opt,name=published_at,json=publishedAt" json:"published_at,omitempty"`
	Upstream      string                     `protobuf:"bytes,4,opt,name=upstream" json:"upstream,omitempty"`
	Ident         string                     `protobuf:"bytes,5,opt,name=ident" json:"ident,omitempty"`
}

func (m *VoteResult) Reset()                    { *m = VoteResult{} }
func (m *VoteResult) String() string            { return proto1.CompactTextString(m) }
func (*VoteResult) ProtoMessage()               {}
func (*VoteResult) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *VoteResult) GetUpstreamGroup() string {
	if m != nil {
		return m.UpstreamGroup
	}
	return ""
}

func (m *VoteResult) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *VoteResult) GetPublishedAt() *google_protobuf.Timestamp {
	if m != nil {
		return m.PublishedAt
	}
	return nil
}

func (m *VoteResult) GetUpstream() string {
	if m != nil {
		return m.Upstream
	}
	return ""
}

func (m *VoteResult) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

type CreateVoteOptions struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Branch   string `protobuf:"bytes,2,opt,name=branch" json:"branch,omitempty"`
	Version  string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
}

func (m *CreateVoteOptions) Reset()                    { *m = CreateVoteOptions{} }
func (m *CreateVoteOptions) String() string            { return proto1.CompactTextString(m) }
func (*CreateVoteOptions) ProtoMessage()               {}
func (*CreateVoteOptions) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *CreateVoteOptions) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *CreateVoteOptions) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *CreateVoteOptions) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type CreateVoteRequest struct {
	Vote *Vote              `protobuf:"bytes,1,opt,name=vote" json:"vote,omitempty"`
	Opts *CreateVoteOptions `protobuf:"bytes,2,opt,name=opts" json:"opts,omitempty"`
}

func (m *CreateVoteRequest) Reset()                    { *m = CreateVoteRequest{} }
func (m *CreateVoteRequest) String() string            { return proto1.CompactTextString(m) }
func (*CreateVoteRequest) ProtoMessage()               {}
func (*CreateVoteRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *CreateVoteRequest) GetVote() *Vote {
	if m != nil {
		return m.Vote
	}
	return nil
}

func (m *CreateVoteRequest) GetOpts() *CreateVoteOptions {
	if m != nil {
		return m.Opts
	}
	return nil
}

type CreateVoteReply struct {
	Vote *Vote  `protobuf:"bytes,1,opt,name=vote" json:"vote,omitempty"`
	Err  string `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
}

func (m *CreateVoteReply) Reset()                    { *m = CreateVoteReply{} }
func (m *CreateVoteReply) String() string            { return proto1.CompactTextString(m) }
func (*CreateVoteReply) ProtoMessage()               {}
func (*CreateVoteReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *CreateVoteReply) GetVote() *Vote {
	if m != nil {
		return m.Vote
	}
	return nil
}

func (m *CreateVoteReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type DeleteVoteOptions struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Branch   string `protobuf:"bytes,2,opt,name=branch" json:"branch,omitempty"`
	Version  string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
}

func (m *DeleteVoteOptions) Reset()                    { *m = DeleteVoteOptions{} }
func (m *DeleteVoteOptions) String() string            { return proto1.CompactTextString(m) }
func (*DeleteVoteOptions) ProtoMessage()               {}
func (*DeleteVoteOptions) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{7} }

func (m *DeleteVoteOptions) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *DeleteVoteOptions) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *DeleteVoteOptions) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type DeleteVoteRequest struct {
	Upstream string             `protobuf:"bytes,1,opt,name=upstream" json:"upstream,omitempty"`
	Ident    string             `protobuf:"bytes,2,opt,name=ident" json:"ident,omitempty"`
	Opts     *DeleteVoteOptions `protobuf:"bytes,3,opt,name=opts" json:"opts,omitempty"`
}

func (m *DeleteVoteRequest) Reset()                    { *m = DeleteVoteRequest{} }
func (m *DeleteVoteRequest) String() string            { return proto1.CompactTextString(m) }
func (*DeleteVoteRequest) ProtoMessage()               {}
func (*DeleteVoteRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{8} }

func (m *DeleteVoteRequest) GetUpstream() string {
	if m != nil {
		return m.Upstream
	}
	return ""
}

func (m *DeleteVoteRequest) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *DeleteVoteRequest) GetOpts() *DeleteVoteOptions {
	if m != nil {
		return m.Opts
	}
	return nil
}

type DeleteVoteReply struct {
	Err string `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
}

func (m *DeleteVoteReply) Reset()                    { *m = DeleteVoteReply{} }
func (m *DeleteVoteReply) String() string            { return proto1.CompactTextString(m) }
func (*DeleteVoteReply) ProtoMessage()               {}
func (*DeleteVoteReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{9} }

func (m *DeleteVoteReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type GetVoteOptions struct {
	ReqType  GetVoteOptions_RequestType `protobuf:"varint,1,opt,name=req_type,json=reqType,enum=proto.GetVoteOptions_RequestType" json:"req_type,omitempty"`
	Upstream string                     `protobuf:"bytes,2,opt,name=upstream" json:"upstream,omitempty"`
	Ident    string                     `protobuf:"bytes,3,opt,name=ident" json:"ident,omitempty"`
	Username string                     `protobuf:"bytes,4,opt,name=username" json:"username,omitempty"`
	Branch   string                     `protobuf:"bytes,5,opt,name=branch" json:"branch,omitempty"`
	Version  string                     `protobuf:"bytes,6,opt,name=version" json:"version,omitempty"`
	Quiet    bool                       `protobuf:"varint,7,opt,name=quiet" json:"quiet,omitempty"`
}

func (m *GetVoteOptions) Reset()                    { *m = GetVoteOptions{} }
func (m *GetVoteOptions) String() string            { return proto1.CompactTextString(m) }
func (*GetVoteOptions) ProtoMessage()               {}
func (*GetVoteOptions) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{10} }

func (m *GetVoteOptions) GetReqType() GetVoteOptions_RequestType {
	if m != nil {
		return m.ReqType
	}
	return GetVoteOptions_BY_USER_VERSION
}

func (m *GetVoteOptions) GetUpstream() string {
	if m != nil {
		return m.Upstream
	}
	return ""
}

func (m *GetVoteOptions) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *GetVoteOptions) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *GetVoteOptions) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *GetVoteOptions) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *GetVoteOptions) GetQuiet() bool {
	if m != nil {
		return m.Quiet
	}
	return false
}

type GetVoteRequest struct {
	Opts *GetVoteOptions `protobuf:"bytes,1,opt,name=opts" json:"opts,omitempty"`
}

func (m *GetVoteRequest) Reset()                    { *m = GetVoteRequest{} }
func (m *GetVoteRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetVoteRequest) ProtoMessage()               {}
func (*GetVoteRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{11} }

func (m *GetVoteRequest) GetOpts() *GetVoteOptions {
	if m != nil {
		return m.Opts
	}
	return nil
}

type GetVoteReply struct {
	Vote *Vote  `protobuf:"bytes,1,opt,name=vote" json:"vote,omitempty"`
	Err  string `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
}

func (m *GetVoteReply) Reset()                    { *m = GetVoteReply{} }
func (m *GetVoteReply) String() string            { return proto1.CompactTextString(m) }
func (*GetVoteReply) ProtoMessage()               {}
func (*GetVoteReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{12} }

func (m *GetVoteReply) GetVote() *Vote {
	if m != nil {
		return m.Vote
	}
	return nil
}

func (m *GetVoteReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type ListVotesOptions struct {
	Category string `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
	Upstream string `protobuf:"bytes,2,opt,name=upstream" json:"upstream,omitempty"`
	Ident    string `protobuf:"bytes,3,opt,name=ident" json:"ident,omitempty"`
	Branch   string `protobuf:"bytes,4,opt,name=branch" json:"branch,omitempty"`
	Version  uint32 `protobuf:"varint,5,opt,name=version" json:"version,omitempty"`
	Username string `protobuf:"bytes,6,opt,name=username" json:"username,omitempty"`
	PageSize uint32 `protobuf:"varint,7,opt,name=page_size,json=pageSize" json:"page_size,omitempty"`
	PageNum  uint32 `protobuf:"varint,8,opt,name=page_num,json=pageNum" json:"page_num,omitempty"`
}

func (m *ListVotesOptions) Reset()                    { *m = ListVotesOptions{} }
func (m *ListVotesOptions) String() string            { return proto1.CompactTextString(m) }
func (*ListVotesOptions) ProtoMessage()               {}
func (*ListVotesOptions) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{13} }

func (m *ListVotesOptions) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

func (m *ListVotesOptions) GetUpstream() string {
	if m != nil {
		return m.Upstream
	}
	return ""
}

func (m *ListVotesOptions) GetIdent() string {
	if m != nil {
		return m.Ident
	}
	return ""
}

func (m *ListVotesOptions) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *ListVotesOptions) GetVersion() uint32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *ListVotesOptions) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ListVotesOptions) GetPageSize() uint32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListVotesOptions) GetPageNum() uint32 {
	if m != nil {
		return m.PageNum
	}
	return 0
}

type ListVotesRequest struct {
	Opts *ListVotesOptions `protobuf:"bytes,1,opt,name=opts" json:"opts,omitempty"`
}

func (m *ListVotesRequest) Reset()                    { *m = ListVotesRequest{} }
func (m *ListVotesRequest) String() string            { return proto1.CompactTextString(m) }
func (*ListVotesRequest) ProtoMessage()               {}
func (*ListVotesRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{14} }

func (m *ListVotesRequest) GetOpts() *ListVotesOptions {
	if m != nil {
		return m.Opts
	}
	return nil
}

type ListVotesReply struct {
	Votes []*Vote `protobuf:"bytes,1,rep,name=votes" json:"votes,omitempty"`
	Total int32   `protobuf:"varint,2,opt,name=total" json:"total,omitempty"`
	Err   string  `protobuf:"bytes,3,opt,name=err" json:"err,omitempty"`
}

func (m *ListVotesReply) Reset()                    { *m = ListVotesReply{} }
func (m *ListVotesReply) String() string            { return proto1.CompactTextString(m) }
func (*ListVotesReply) ProtoMessage()               {}
func (*ListVotesReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{15} }

func (m *ListVotesReply) GetVotes() []*Vote {
	if m != nil {
		return m.Votes
	}
	return nil
}

func (m *ListVotesReply) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ListVotesReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

type UpdateVoteOptions struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Branch   string `protobuf:"bytes,2,opt,name=branch" json:"branch,omitempty"`
	Version  string `protobuf:"bytes,3,opt,name=version" json:"version,omitempty"`
}

func (m *UpdateVoteOptions) Reset()                    { *m = UpdateVoteOptions{} }
func (m *UpdateVoteOptions) String() string            { return proto1.CompactTextString(m) }
func (*UpdateVoteOptions) ProtoMessage()               {}
func (*UpdateVoteOptions) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{16} }

func (m *UpdateVoteOptions) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *UpdateVoteOptions) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *UpdateVoteOptions) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type UpdateVoteRequest struct {
	Vote *Vote              `protobuf:"bytes,1,opt,name=vote" json:"vote,omitempty"`
	Opts *UpdateVoteOptions `protobuf:"bytes,2,opt,name=opts" json:"opts,omitempty"`
}

func (m *UpdateVoteRequest) Reset()                    { *m = UpdateVoteRequest{} }
func (m *UpdateVoteRequest) String() string            { return proto1.CompactTextString(m) }
func (*UpdateVoteRequest) ProtoMessage()               {}
func (*UpdateVoteRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{17} }

func (m *UpdateVoteRequest) GetVote() *Vote {
	if m != nil {
		return m.Vote
	}
	return nil
}

func (m *UpdateVoteRequest) GetOpts() *UpdateVoteOptions {
	if m != nil {
		return m.Opts
	}
	return nil
}

type UpdateVoteReply struct {
	Vote *Vote  `protobuf:"bytes,1,opt,name=vote" json:"vote,omitempty"`
	Err  string `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
}

func (m *UpdateVoteReply) Reset()                    { *m = UpdateVoteReply{} }
func (m *UpdateVoteReply) String() string            { return proto1.CompactTextString(m) }
func (*UpdateVoteReply) ProtoMessage()               {}
func (*UpdateVoteReply) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{18} }

func (m *UpdateVoteReply) GetVote() *Vote {
	if m != nil {
		return m.Vote
	}
	return nil
}

func (m *UpdateVoteReply) GetErr() string {
	if m != nil {
		return m.Err
	}
	return ""
}

func init() {
	proto1.RegisterType((*Vote)(nil), "proto.Vote")
	proto1.RegisterType((*VoteSummary)(nil), "proto.VoteSummary")
	proto1.RegisterType((*CreateVotesOptions)(nil), "proto.CreateVotesOptions")
	proto1.RegisterType((*VoteResult)(nil), "proto.VoteResult")
	proto1.RegisterType((*CreateVoteOptions)(nil), "proto.CreateVoteOptions")
	proto1.RegisterType((*CreateVoteRequest)(nil), "proto.CreateVoteRequest")
	proto1.RegisterType((*CreateVoteReply)(nil), "proto.CreateVoteReply")
	proto1.RegisterType((*DeleteVoteOptions)(nil), "proto.DeleteVoteOptions")
	proto1.RegisterType((*DeleteVoteRequest)(nil), "proto.DeleteVoteRequest")
	proto1.RegisterType((*DeleteVoteReply)(nil), "proto.DeleteVoteReply")
	proto1.RegisterType((*GetVoteOptions)(nil), "proto.GetVoteOptions")
	proto1.RegisterType((*GetVoteRequest)(nil), "proto.GetVoteRequest")
	proto1.RegisterType((*GetVoteReply)(nil), "proto.GetVoteReply")
	proto1.RegisterType((*ListVotesOptions)(nil), "proto.ListVotesOptions")
	proto1.RegisterType((*ListVotesRequest)(nil), "proto.ListVotesRequest")
	proto1.RegisterType((*ListVotesReply)(nil), "proto.ListVotesReply")
	proto1.RegisterType((*UpdateVoteOptions)(nil), "proto.UpdateVoteOptions")
	proto1.RegisterType((*UpdateVoteRequest)(nil), "proto.UpdateVoteRequest")
	proto1.RegisterType((*UpdateVoteReply)(nil), "proto.UpdateVoteReply")
	proto1.RegisterEnum("proto.VoteValue", VoteValue_name, VoteValue_value)
	proto1.RegisterEnum("proto.GetVoteOptions_RequestType", GetVoteOptions_RequestType_name, GetVoteOptions_RequestType_value)
}

func init() { proto1.RegisterFile("proto/ballot.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 1023 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x95, 0x5d, 0x6e, 0xdb, 0x46,
	0x10, 0x80, 0x43, 0x51, 0xd4, 0xcf, 0xd0, 0xb2, 0x98, 0x6d, 0xd2, 0xb0, 0x0e, 0x0a, 0x3b, 0x0c,
	0x0a, 0x38, 0x6d, 0x21, 0x17, 0xce, 0x5b, 0x7f, 0x50, 0xb8, 0x8d, 0x91, 0x1a, 0x08, 0xe4, 0x80,
	0xb2, 0x0d, 0x18, 0x7d, 0x20, 0x56, 0xd6, 0x56, 0x21, 0xb0, 0x14, 0x69, 0x72, 0x69, 0x41, 0x39,
	0x41, 0x6f, 0xd0, 0xcb, 0xf4, 0x30, 0x7d, 0xea, 0x39, 0x8a, 0xd9, 0x1f, 0x8a, 0xb4, 0xab, 0x06,
	0x70, 0x91, 0x27, 0xed, 0xfc, 0x70, 0x67, 0xe6, 0xdb, 0x99, 0x11, 0x90, 0x2c, 0x4f, 0x45, 0x7a,
	0x30, 0xa5, 0x9c, 0xa7, 0x62, 0x24, 0x05, 0xe2, 0xc8, 0x9f, 0x9d, 0xdd, 0x79, 0x9a, 0xce, 0x39,
	0x3b, 0x90, 0xd2, 0xb4, 0xfc, 0xed, 0x40, 0xc4, 0x09, 0x2b, 0x04, 0x4d, 0x32, 0xe5, 0xb7, 0x33,
	0x54, 0xdf, 0x72, 0xba, 0xd4, 0x0a, 0x4f, 0x29, 0xca, 0x82, 0xe5, 0x4a, 0x13, 0xfc, 0x65, 0x43,
	0xfb, 0x22, 0x15, 0x8c, 0x78, 0x60, 0x97, 0xf1, 0xcc, 0xb7, 0xf6, 0xac, 0xfd, 0x7e, 0x88, 0x47,
	0xf2, 0x18, 0x3a, 0x9c, 0x2e, 0xa3, 0x78, 0xe6, 0xb7, 0xa4, 0xd2, 0xe1, 0x74, 0x79, 0x32, 0x23,
	0x4f, 0xa0, 0x8b, 0xdf, 0xa3, 0xde, 0x96, 0xfa, 0x0e, 0x8a, 0x27, 0x33, 0x42, 0xa0, 0x7d, 0x93,
	0x0a, 0xe6, 0xb7, 0xa5, 0x56, 0x9e, 0x89, 0x0f, 0xdd, 0xab, 0x34, 0x49, 0xd8, 0x42, 0xf8, 0x8e,
	0x54, 0x1b, 0x91, 0xec, 0x40, 0x0f, 0xbf, 0x5b, 0xd0, 0x84, 0xf9, 0x1d, 0x69, 0xaa, 0x64, 0x69,
	0xcb, 0x0a, 0x91, 0x33, 0x9a, 0xf8, 0x5d, 0x6d, 0xd3, 0x32, 0x79, 0x04, 0x4e, 0x3c, 0xc3, 0xfb,
	0x7a, 0x2a, 0x29, 0x29, 0x90, 0x4f, 0xa1, 0x33, 0xcd, 0xe9, 0xe2, 0xea, 0x9d, 0xdf, 0x57, 0x39,
	0x29, 0x09, 0xbd, 0x39, 0x9d, 0x32, 0xee, 0x83, 0x29, 0x61, 0xca, 0x38, 0x79, 0x09, 0xdd, 0x2b,
	0x5a, 0x88, 0x88, 0x0a, 0xdf, 0xdd, 0xb3, 0xf6, 0xdd, 0xc3, 0x9d, 0x91, 0x42, 0x39, 0x32, 0x28,
	0x47, 0x67, 0x06, 0x65, 0xd8, 0x41, 0xd7, 0x23, 0x81, 0xa5, 0xdc, 0xb0, 0xbc, 0x88, 0xd3, 0x85,
	0xbf, 0xb5, 0x67, 0xed, 0x0f, 0x42, 0x23, 0x92, 0xcf, 0x01, 0xf4, 0x11, 0xa1, 0x0c, 0x64, 0xa4,
	0xbe, 0xd6, 0x9c, 0xcc, 0xc8, 0x2e, 0xb8, 0x59, 0x7c, 0x25, 0xca, 0x9c, 0x45, 0x65, 0xce, 0xfd,
	0x6d, 0x69, 0x07, 0xad, 0x3a, 0xcf, 0x39, 0x79, 0x0a, 0x7d, 0x04, 0x2d, 0x62, 0xc1, 0x99, 0x3f,
	0x54, 0xf5, 0x72, 0xba, 0x3c, 0x43, 0x99, 0xec, 0x82, 0xcd, 0xe9, 0xd2, 0xf7, 0x64, 0x9e, 0x03,
	0x95, 0xe0, 0xe8, 0x0d, 0x5d, 0x4e, 0x98, 0x08, 0xd1, 0x42, 0x76, 0xa1, 0x8d, 0xe0, 0xfc, 0x87,
	0xd2, 0xc3, 0xd5, 0x1e, 0xe7, 0x05, 0xcb, 0x43, 0x69, 0x08, 0xfe, 0x68, 0x81, 0x8b, 0x4f, 0x3c,
	0x29, 0x93, 0x84, 0xe6, 0x2b, 0x7c, 0xa7, 0x15, 0x5d, 0x15, 0xf2, 0xa9, 0x9d, 0x50, 0x9e, 0x51,
	0xb7, 0x40, 0x5d, 0x4b, 0xe9, 0xf0, 0x8c, 0x05, 0x67, 0x39, 0x2b, 0x90, 0xb5, 0x2d, 0xd5, 0x46,
	0xc4, 0x8a, 0x16, 0xa9, 0x88, 0x8c, 0xb5, 0x2d, 0xad, 0xb0, 0x48, 0xc5, 0x5b, 0xed, 0xf0, 0x1c,
	0x06, 0xe6, 0xc1, 0x22, 0x19, 0xcb, 0x91, 0x2e, 0x5b, 0x46, 0x79, 0x89, 0xf7, 0xd7, 0x9d, 0x64,
	0xf0, 0x4e, 0xd3, 0x69, 0x8c, 0x4e, 0x2f, 0xc0, 0xab, 0x9c, 0x4c, 0xbc, 0xae, 0xf4, 0x1b, 0x1a,
	0xbd, 0x09, 0xfa, 0x0d, 0x3c, 0x5a, 0xdf, 0x57, 0x4b, 0xaf, 0x27, 0xdd, 0x49, 0x75, 0x6d, 0x95,
	0x66, 0xf0, 0x0b, 0x90, 0x9f, 0x73, 0x46, 0x05, 0x43, 0x3c, 0xc5, 0x69, 0x26, 0xe2, 0x74, 0x51,
	0x90, 0x43, 0x70, 0xb1, 0x77, 0xa3, 0x9c, 0x15, 0x25, 0x17, 0x12, 0x93, 0x7b, 0xf8, 0x50, 0x73,
	0x45, 0xcf, 0x50, 0x1a, 0x42, 0xb8, 0xa9, 0xce, 0xc1, 0x9f, 0x16, 0xc0, 0xda, 0x44, 0xbe, 0x80,
	0xed, 0x2a, 0x95, 0x79, 0x9e, 0x96, 0x99, 0x9e, 0xab, 0xaa, 0xe0, 0xd7, 0xa8, 0xc4, 0xae, 0xd5,
	0x41, 0xd4, 0x84, 0x69, 0x89, 0xfc, 0x00, 0x5b, 0x59, 0x39, 0xe5, 0x71, 0xf1, 0x8e, 0xcd, 0xb0,
	0x49, 0xed, 0x0f, 0x36, 0xa9, 0x5b, 0xf9, 0x1f, 0x89, 0xc6, 0xf8, 0xb4, 0x37, 0x8d, 0x8f, 0x53,
	0x1b, 0x9f, 0x80, 0xc2, 0xc3, 0x35, 0x08, 0xc3, 0xa1, 0x3e, 0xa1, 0xd6, 0xad, 0x09, 0x5d, 0xcf,
	0x5b, 0xab, 0x31, 0x6f, 0xb5, 0x21, 0x51, 0xcb, 0xc1, 0x88, 0xc1, 0xb4, 0x1e, 0x22, 0x64, 0xd7,
	0x25, 0x2b, 0xb0, 0x91, 0xd4, 0xca, 0xb0, 0x1a, 0xbd, 0x2b, 0x3d, 0xd4, 0xfe, 0xf8, 0x1a, 0xda,
	0x69, 0x26, 0x54, 0x5f, 0xba, 0x87, 0xbe, 0x76, 0xb8, 0x93, 0x6b, 0x28, 0xbd, 0x82, 0x57, 0x30,
	0xac, 0xc7, 0xc8, 0xf8, 0xea, 0xc3, 0x11, 0x3c, 0xb0, 0x59, 0x9e, 0xeb, 0x32, 0xf0, 0x88, 0x30,
	0x5e, 0x31, 0xce, 0x3e, 0x26, 0x8c, 0xa2, 0x1e, 0xc2, 0xc0, 0xa8, 0x3f, 0x9b, 0xb5, 0xe9, 0xd9,
	0x5a, 0xf5, 0xad, 0x67, 0xe8, 0xd8, 0x0d, 0x3a, 0x77, 0x92, 0xd7, 0x74, 0x9e, 0xc3, 0xb0, 0x1e,
	0x14, 0xe9, 0xe8, 0xe2, 0xad, 0x75, 0xf1, 0xbf, 0xb7, 0x60, 0xfb, 0x35, 0x13, 0xf5, 0xd2, 0xbf,
	0x87, 0x5e, 0xce, 0xae, 0x23, 0xb1, 0xca, 0x54, 0xe9, 0xdb, 0x87, 0xcf, 0x74, 0xa4, 0xa6, 0xe3,
	0x48, 0x17, 0x72, 0xb6, 0xca, 0x58, 0xd8, 0xcd, 0xd9, 0x35, 0x1e, 0x1a, 0x55, 0xb5, 0x36, 0x55,
	0x65, 0xd7, 0xab, 0xaa, 0xa3, 0x6e, 0x6f, 0x44, 0xed, 0x6c, 0x42, 0xdd, 0x69, 0xa0, 0xc6, 0x18,
	0xd7, 0x65, 0xcc, 0xd4, 0xd6, 0xe8, 0x85, 0x4a, 0x08, 0x02, 0x70, 0x6b, 0xd9, 0x92, 0x4f, 0x60,
	0xf8, 0xd3, 0x65, 0x74, 0x3e, 0x39, 0x0e, 0xa3, 0x8b, 0xe3, 0x70, 0x72, 0x72, 0x3a, 0xf6, 0x1e,
	0x04, 0xdf, 0x55, 0x24, 0xcc, 0x0b, 0xbd, 0xd0, 0xbc, 0x55, 0x33, 0x3d, 0xfe, 0x57, 0x0a, 0x1a,
	0xf6, 0x11, 0x6c, 0x55, 0x1f, 0xdf, 0xb3, 0x0f, 0xff, 0xb6, 0xc0, 0x7b, 0x13, 0x17, 0xa2, 0xb1,
	0x9c, 0x76, 0xa0, 0x77, 0x45, 0x05, 0x9b, 0xa7, 0xf9, 0xca, 0x34, 0x89, 0x91, 0xef, 0x81, 0x7a,
	0x8d, 0xb3, 0xbd, 0x09, 0xa7, 0xd3, 0xfc, 0xaf, 0xfb, 0xaf, 0xbf, 0xed, 0xa7, 0xd0, 0xcf, 0xe8,
	0x9c, 0x45, 0x45, 0xfc, 0x9e, 0x49, 0xdc, 0x83, 0xb0, 0x87, 0x8a, 0x49, 0xfc, 0x9e, 0x91, 0xcf,
	0x40, 0x9e, 0xa3, 0x45, 0x99, 0xc8, 0x8d, 0x3c, 0x08, 0xbb, 0x28, 0x8f, 0xcb, 0x24, 0xf8, 0xb1,
	0x56, 0xa7, 0x41, 0xfd, 0x55, 0x03, 0xf5, 0x13, 0xf3, 0xbf, 0x77, 0x0b, 0x87, 0x86, 0xfd, 0x2b,
	0x6c, 0xd7, 0x2e, 0x40, 0xdc, 0xcf, 0xc0, 0x41, 0xaa, 0xf8, 0xbd, 0x7d, 0x9b, 0xb7, 0xb2, 0x20,
	0x11, 0x91, 0x0a, 0xca, 0xf5, 0x7f, 0x9e, 0x12, 0xcc, 0x33, 0xd8, 0x8d, 0x75, 0x70, 0x9e, 0xcd,
	0x3e, 0xf6, 0x6e, 0x5c, 0x87, 0xf8, 0x9f, 0xbb, 0xf1, 0x4e, 0xae, 0xeb, 0xdd, 0x58, 0x8f, 0x71,
	0xbf, 0x9e, 0xfc, 0xf2, 0x5b, 0xe8, 0xa3, 0xfd, 0x82, 0xf2, 0x92, 0x91, 0x2e, 0xd8, 0x97, 0xc7,
	0x13, 0xef, 0x01, 0xe9, 0x40, 0x6b, 0x7c, 0xea, 0x59, 0xc4, 0x85, 0xee, 0xdb, 0xf0, 0x78, 0x72,
	0x3c, 0x3e, 0xf3, 0x5a, 0x64, 0x08, 0xee, 0xf8, 0xf4, 0x2c, 0x32, 0x0a, 0x7b, 0xda, 0x91, 0xf7,
	0xbf, 0xfc, 0x27, 0x00, 0x00, 0xff, 0xff, 0x76, 0x10, 0x15, 0x6c, 0xd2, 0x0a, 0x00, 0x00,
}
