syntax = "proto3";

import "google/protobuf/timestamp.proto";
import "proto/user.proto";

package proto;

message LawSet {
    Law law = 1;
    Branch branch = 2;
    Version version = 3;
    Author author = 4;
    User user = 5;
}

message Author {
    string uid = 1;
    string username = 2;
    string email = 3;
    string full_name = 4;
    string picture_url = 5;
}

message Law {
    string uid = 1;
    string user_id = 2;
	string upstream = 3;
	string ident = 4;
	string title = 5;
    string short_title = 6;
    string description = 7;
    string url = 8;
}

message Branch {
    string uid = 1;
    string law_id = 2;
    string user_id = 3;
	string name = 4;
    string upstream = 5;
}

message Version {
    string uid = 1;
    string branch_id = 2;
	string user_id = 3;
	uint32 version = 4;
    string hash = 5;
	string description = 6;
	string msg = 7;
	string body = 8;
    string label = 9;
    google.protobuf.Timestamp published_at = 11;
    map<string, string> tags = 12;
    int32 yays = 13;
    int32 nays = 14;
    bool has_voted = 15;
    string upstream_group = 16;
    int32 comment_count = 17;
}

message CreateLawOptions {
    string branch = 1;
    uint32 version = 2;
}

message CreateLawsOptions {
    string branch = 1;
    uint32 version = 2;
}

message CreateLawRequest {
    LawSet law_set = 1;
    CreateLawOptions opts = 2;
}

message CreateLawReply {
    LawSet law_set = 1;
    string err = 2;
}

message DeleteLawOptions {
    string branch = 1;
    string version = 2;
}

message DeleteLawRequest {
    string upstream = 1;
    string ident = 2;
    DeleteLawOptions opts = 3;
}

message DeleteLawReply {
    string err = 1;
}

message DiffLawsOptions {
    string our_branch = 1;
    string our_version = 2;
    string their_branch = 3;
    string their_version = 4;
}

message DiffLawsRequest {
    string upstream = 1;
    string ident = 2;
    DiffLawsOptions opts = 3;
}

message DiffLawsReply {
    string diff = 1;
    LawSet theirs = 2;
    string err = 3;
}

message GetLawOptions {
    string branch = 1;
    string version = 2;
    bool profile = 3;
}

message GetLawRequest {
    string upstream = 1;
    string ident = 2;
    GetLawOptions opts = 3;
}

message GetLawReply {
    LawSet law_set = 1;
    repeated string branches = 2;
    string err = 3;
}

message ListLawsOptions {
    string upstream = 1;
    string ident = 2;
    string branch = 3;
    string username = 4;
    string from_date = 5;
    string to_date = 6;
    /*int32 limit = 7;*/
    int32 page_size = 8;
    int32 page_num = 9;
    bool desc = 11;
    string order_by = 12;
    string search = 13;
    enum RequestType {
        USER_LAWS = 0;
        UPSTREAM_LAWS = 1;
        SEARCH = 2;
        LAW_BRANCHES = 3;
        BRANCH_VERSIONS = 4;
    }
    RequestType req_type = 14;
}

message ListLawsRequest {
    ListLawsOptions opts = 1;
}

message ListLawsReply {
    repeated LawSet law_sets = 1;
    int32 total = 2;
    repeated string suggestions = 3;
    string err = 4;
}

message UpdateLawOptions {
    string branch = 1;
    string version = 2;
}

message UpdateLawRequest {
    Law law = 1;
    UpdateLawOptions opts = 2;
}

message UpdateLawReply {
    string err = 1;
}
